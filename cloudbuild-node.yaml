options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/noctua-forest-images/noctua-forest-node:$BUILD_ID'
      - '.'
    dir: 'node-backend'
    id: 'Build Backend Docker Image'

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/noctua-forest-images/noctua-forest-node:$BUILD_ID'
    id: 'Push Backend Image'
    waitFor: ['Build Backend Docker Image']

  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'noctua-forest-backend'
      - '--image'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/noctua-forest-images/noctua-forest-node:$BUILD_ID'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--set-env-vars=NODE_ENV=production'
      - '--service-account=noctua-forest-service@${PROJECT_ID}.iam.gserviceaccount.com'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--memory=512Mi'
      - '--cpu=1'
      - '--timeout=300'
    id: 'Deploy Backend to Cloud Run'
    waitFor: ['Push Backend Image']

  # Get the Cloud Run service URL
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$(gcloud run services describe noctua-forest-backend --region=us-central1 --format='value(status.url)')
        echo "Backend URL: $$SERVICE_URL"
        echo "$$SERVICE_URL" > .env
    id: 'Get Backend URL'
    waitFor: ['Deploy Backend to Cloud Run']

  # Create .env file for frontend
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Creating frontend .env file..."
        echo "VITE_API_URL=$$SERVICE_URL/api" >> .env
        mv .env noctua-forest/.env
        echo "--- Frontend .env file contents ---"
        cat noctua-forest/.env
    id: 'Write Frontend .env'
    waitFor: ['Get Backend URL']

  # Install frontend dependencies
  - name: 'node:20'
    entrypoint: npm
    args: ['install']
    dir: 'noctua-forest'
    id: 'Install Frontend Dependencies'
    waitFor: ['Write Frontend .env']

  # Build the frontend
  - name: 'node:20'
    entrypoint: npm
    args: ['run', 'build']
    dir: 'noctua-forest'
    id: 'Build Frontend'
    waitFor: ['Install Frontend Dependencies']

  # Deploy to Firebase Hosting
  - name: 'gcr.io/${PROJECT_ID}/firebase'
    args: ['deploy', '--only', 'hosting']
    dir: 'noctua-forest'
    id: 'Deploy to Firebase Hosting'
    waitFor: ['Build Frontend']

images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/noctua-forest-images/noctua-forest-node:$BUILD_ID'

timeout: '1800s' # 30 minutes timeout 