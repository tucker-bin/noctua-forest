# Secure Cloud Build Configuration for Noctua Rhyme App
# This replaces the insecure .git/cloudbuild.yaml

steps:
  # Step 1: Create .env file for Firebase configuration using Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Create .env.local for frontend with secrets from Secret Manager
        echo "VITE_FIREBASE_API_KEY=$$FIREBASE_API_KEY" > my-rhyme-app/.env.local
        echo "VITE_FIREBASE_AUTH_DOMAIN=$$FIREBASE_AUTH_DOMAIN" >> my-rhyme-app/.env.local
        echo "VITE_FIREBASE_PROJECT_ID=$PROJECT_ID" >> my-rhyme-app/.env.local
        echo "VITE_FIREBASE_STORAGE_BUCKET=$$FIREBASE_STORAGE_BUCKET" >> my-rhyme-app/.env.local
        echo "VITE_FIREBASE_MESSAGING_SENDER_ID=$$FIREBASE_MESSAGING_SENDER_ID" >> my-rhyme-app/.env.local
        echo "VITE_FIREBASE_APP_ID=$$FIREBASE_APP_ID" >> my-rhyme-app/.env.local
    secretEnv: ['FIREBASE_API_KEY', 'FIREBASE_AUTH_DOMAIN', 'FIREBASE_STORAGE_BUCKET', 'FIREBASE_MESSAGING_SENDER_ID', 'FIREBASE_APP_ID']
    id: 'Setup Frontend Environment'

  # Step 2: Install frontend dependencies
  - name: 'node:18'
    entrypoint: 'npm'
    dir: 'my-rhyme-app'
    args: ['ci']
    id: 'Install Frontend Dependencies'

  # Step 3: Build the frontend
  - name: 'node:18'
    entrypoint: 'npm'
    dir: 'my-rhyme-app'
    args: ['run', 'build']
    id: 'Build Frontend'

  # Step 4: Deploy to Firebase Hosting
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args: ['deploy', '--only', 'hosting', '--project', '$PROJECT_ID']
    id: 'Deploy to Firebase Hosting'

  # Step 5: Deploy backend to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    dir: 'node-backend'
    args:
      - 'run'
      - 'deploy'
      - 'my-rhyme-app-backend'
      - '--source=.'
      - '--region=us-central1'
      - '--allow-unauthenticated'
      - '--set-env-vars=NODE_ENV=production'
      - '--set-secrets=ANTHROPIC_API_KEY=anthropic-api-key:latest'
      - '--project=$PROJECT_ID'
    id: 'Deploy Backend to Cloud Run'

# Secrets configuration - must be set up in Secret Manager first
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/firebase-api-key/versions/latest
    env: 'FIREBASE_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/firebase-auth-domain/versions/latest
    env: 'FIREBASE_AUTH_DOMAIN'
  - versionName: projects/$PROJECT_ID/secrets/firebase-storage-bucket/versions/latest
    env: 'FIREBASE_STORAGE_BUCKET'
  - versionName: projects/$PROJECT_ID/secrets/firebase-messaging-sender-id/versions/latest
    env: 'FIREBASE_MESSAGING_SENDER_ID'
  - versionName: projects/$PROJECT_ID/secrets/firebase-app-id/versions/latest
    env: 'FIREBASE_APP_ID'

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout for the entire build
timeout: '1200s' 